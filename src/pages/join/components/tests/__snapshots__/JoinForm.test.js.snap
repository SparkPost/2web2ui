// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JoinForm render disables form when loading 1`] = `
<Form
  id="sign-up-form"
>
  <Stack>
    <Field
      autoComplete="given-name"
      component={[Function]}
      disabled={true}
      label="First Name"
      name="first_name"
      validate={[Function]}
    />
    <Field
      autoComplete="family-name"
      component={[Function]}
      disabled={true}
      label="Last Name"
      name="last_name"
      validate={[Function]}
    />
    <Field
      autoComplete="organization"
      component={[Function]}
      disabled={true}
      label="Company"
      name="company_name"
    />
    <Field
      autoComplete="username email"
      component={[Function]}
      disabled={true}
      label="Email"
      name="email"
      validate={
        Array [
          [Function],
          [Function],
        ]
      }
    />
    <Field
      autoComplete="new-password"
      component={[Function]}
      connectRight={
        <Button
          data-id="show-password-button"
          onClick={[Function]}
          variant="connected"
        >
          Show
        </Button>
      }
      disabled={true}
      label="Password"
      name="password"
      type="password"
      validate={
        Array [
          [Function],
          [Function],
          [Function],
        ]
      }
    />
    <Checkbox.Group>
      <Field
        component={[Function]}
        disabled={true}
        id="email_opt_in"
        label={
          <span>
            I'm happy to receive marketing email from SparkPost
          </span>
        }
        name="email_opt_in"
        type="checkbox"
      />
      <Field
        component={[Function]}
        disabled={true}
        id="tou_accepted"
        label={
          <span>
            I agree to SparkPost's 
            <ExternalLink
              to="https://www.sparkpost.com/policies/tou"
            >
              Terms of Use
            </ExternalLink>
          </span>
        }
        name="tou_accepted"
        type="checkbox"
        validate={[Function]}
      />
    </Checkbox.Group>
    <Box>
      <Button
        disabled={true}
        id="submit"
        onClick={[Function]}
        variant="primary"
      >
        Loading
      </Button>
    </Box>
  </Stack>
  <t
    badge="bottomright"
    elementID="g-recaptcha"
    expiredCallbackName="expiredCallback"
    hl="en"
    onloadCallback={[Function]}
    onloadCallbackName="onloadCallback"
    render="explicit"
    sitekey="6LekChoUAAAAAJZouMPHnhRss2t7-ZetbAABfsOZ"
    size="invisible"
    tabindex="0"
    theme="light"
    type="image"
    verifyCallback={[Function]}
    verifyCallbackName="verifyCallback"
  />
</Form>
`;

exports[`JoinForm render disables form when recaptcha is not loaded 1`] = `
<Form
  id="sign-up-form"
>
  <Stack>
    <Field
      autoComplete="given-name"
      component={[Function]}
      disabled={true}
      label="First Name"
      name="first_name"
      validate={[Function]}
    />
    <Field
      autoComplete="family-name"
      component={[Function]}
      disabled={true}
      label="Last Name"
      name="last_name"
      validate={[Function]}
    />
    <Field
      autoComplete="organization"
      component={[Function]}
      disabled={true}
      label="Company"
      name="company_name"
    />
    <Field
      autoComplete="username email"
      component={[Function]}
      disabled={true}
      label="Email"
      name="email"
      validate={
        Array [
          [Function],
          [Function],
        ]
      }
    />
    <Field
      autoComplete="new-password"
      component={[Function]}
      connectRight={
        <Button
          data-id="show-password-button"
          onClick={[Function]}
          variant="connected"
        >
          Show
        </Button>
      }
      disabled={true}
      label="Password"
      name="password"
      type="password"
      validate={
        Array [
          [Function],
          [Function],
          [Function],
        ]
      }
    />
    <Checkbox.Group>
      <Field
        component={[Function]}
        disabled={true}
        id="email_opt_in"
        label={
          <span>
            I'm happy to receive marketing email from SparkPost
          </span>
        }
        name="email_opt_in"
        type="checkbox"
      />
      <Field
        component={[Function]}
        disabled={true}
        id="tou_accepted"
        label={
          <span>
            I agree to SparkPost's 
            <ExternalLink
              to="https://www.sparkpost.com/policies/tou"
            >
              Terms of Use
            </ExternalLink>
          </span>
        }
        name="tou_accepted"
        type="checkbox"
        validate={[Function]}
      />
    </Checkbox.Group>
    <Box>
      <Button
        disabled={true}
        id="submit"
        onClick={[Function]}
        variant="primary"
      >
        Create Account
      </Button>
    </Box>
  </Stack>
  <t
    badge="bottomright"
    elementID="g-recaptcha"
    expiredCallbackName="expiredCallback"
    hl="en"
    onloadCallback={[Function]}
    onloadCallbackName="onloadCallback"
    render="explicit"
    sitekey="6LekChoUAAAAAJZouMPHnhRss2t7-ZetbAABfsOZ"
    size="invisible"
    tabindex="0"
    theme="light"
    type="image"
    verifyCallback={[Function]}
    verifyCallbackName="verifyCallback"
  />
</Form>
`;

exports[`JoinForm render enables form correctly 1`] = `
<Form
  id="sign-up-form"
>
  <Stack>
    <Field
      autoComplete="given-name"
      component={[Function]}
      disabled={false}
      label="First Name"
      name="first_name"
      validate={[Function]}
    />
    <Field
      autoComplete="family-name"
      component={[Function]}
      disabled={false}
      label="Last Name"
      name="last_name"
      validate={[Function]}
    />
    <Field
      autoComplete="organization"
      component={[Function]}
      disabled={false}
      label="Company"
      name="company_name"
    />
    <Field
      autoComplete="username email"
      component={[Function]}
      disabled={false}
      label="Email"
      name="email"
      validate={
        Array [
          [Function],
          [Function],
        ]
      }
    />
    <Field
      autoComplete="new-password"
      component={[Function]}
      connectRight={
        <Button
          data-id="show-password-button"
          onClick={[Function]}
          variant="connected"
        >
          Show
        </Button>
      }
      disabled={false}
      label="Password"
      name="password"
      type="password"
      validate={
        Array [
          [Function],
          [Function],
          [Function],
        ]
      }
    />
    <Checkbox.Group>
      <Field
        component={[Function]}
        disabled={false}
        id="email_opt_in"
        label={
          <span>
            I'm happy to receive marketing email from SparkPost
          </span>
        }
        name="email_opt_in"
        type="checkbox"
      />
      <Field
        component={[Function]}
        disabled={false}
        id="tou_accepted"
        label={
          <span>
            I agree to SparkPost's 
            <ExternalLink
              to="https://www.sparkpost.com/policies/tou"
            >
              Terms of Use
            </ExternalLink>
          </span>
        }
        name="tou_accepted"
        type="checkbox"
        validate={[Function]}
      />
    </Checkbox.Group>
    <Box>
      <Button
        disabled={false}
        id="submit"
        onClick={[Function]}
        variant="primary"
      >
        Create Account
      </Button>
    </Box>
  </Stack>
  <t
    badge="bottomright"
    elementID="g-recaptcha"
    expiredCallbackName="expiredCallback"
    hl="en"
    onloadCallback={[Function]}
    onloadCallbackName="onloadCallback"
    render="explicit"
    sitekey="6LekChoUAAAAAJZouMPHnhRss2t7-ZetbAABfsOZ"
    size="invisible"
    tabindex="0"
    theme="light"
    type="image"
    verifyCallback={[Function]}
    verifyCallbackName="verifyCallback"
  />
</Form>
`;
