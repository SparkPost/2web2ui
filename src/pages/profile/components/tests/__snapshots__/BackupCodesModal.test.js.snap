// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: BackupCodesModal should change button text to Generating... when submitting 1`] = `
<Modal.LEGACY
  open={true}
>
  <Panel.LEGACY
    title="Generate Two-factor Backup Codes"
  >
    <Form
      onSubmit={[Function]}
    >
      <Panel.LEGACY.Section>
        <Stack>
          <Banner
            marginBottom="500"
            status="warning"
          >
            Clicking Generate will overwrite your existing 
            10
             active backup codes.
          </Banner>
          <p>
            Keep these single-use backup codes somewhere safe but accessible. They can be used if your authentication app is unavailable (
            <span
              aria-label="phone in toilet emojis"
              role="img"
            >
              ðŸ“±Â âž¡ï¸ŽÂ ðŸš½
            </span>
             
            , etc).
          </p>
          <Grid>
            <Grid.Column
              md={6}
              xs={12}
            >
              <TextField
                error=""
                id="tfa-backup-codes-generate-password"
                onChange={[MockFunction]}
                placeholder="Password"
                required={true}
                type="password"
                value=""
              />
            </Grid.Column>
          </Grid>
        </Stack>
      </Panel.LEGACY.Section>
      <Panel.LEGACY.Section>
        <ButtonWrapper>
          <Button
            disabled={true}
            onClick={[MockFunction]}
            type="submit"
            variant="primary"
          >
            Generating...
          </Button>
          <Button
            onClick={[MockFunction]}
            variant="secondary"
          >
            Cancel
          </Button>
        </ButtonWrapper>
      </Panel.LEGACY.Section>
    </Form>
  </Panel.LEGACY>
</Modal.LEGACY>
`;

exports[`Component: BackupCodesModal should render correctly 1`] = `
<Modal.LEGACY
  open={true}
>
  <Panel.LEGACY
    title="Generate Two-factor Backup Codes"
  >
    <Form
      onSubmit={[Function]}
    >
      <Panel.LEGACY.Section>
        <Stack>
          <Banner
            marginBottom="500"
            status="warning"
          >
            Clicking Generate will overwrite your existing 
            10
             active backup codes.
          </Banner>
          <p>
            Keep these single-use backup codes somewhere safe but accessible. They can be used if your authentication app is unavailable (
            <span
              aria-label="phone in toilet emojis"
              role="img"
            >
              ðŸ“±Â âž¡ï¸ŽÂ ðŸš½
            </span>
             
            , etc).
          </p>
          <Grid>
            <Grid.Column
              md={6}
              xs={12}
            >
              <TextField
                error=""
                id="tfa-backup-codes-generate-password"
                onChange={[Function]}
                placeholder="Password"
                required={true}
                type="password"
                value=""
              />
            </Grid.Column>
          </Grid>
        </Stack>
      </Panel.LEGACY.Section>
      <Panel.LEGACY.Section>
        <ButtonWrapper>
          <Button
            disabled={false}
            onClick={[Function]}
            type="submit"
            variant="primary"
          >
            Generate
          </Button>
          <Button
            onClick={[MockFunction]}
            variant="secondary"
          >
            Cancel
          </Button>
        </ButtonWrapper>
      </Panel.LEGACY.Section>
    </Form>
  </Panel.LEGACY>
</Modal.LEGACY>
`;

exports[`Component: BackupCodesModal should show new codes when they exist 1`] = `
<Modal.LEGACY
  open={true}
>
  <Panel.LEGACY
    title="Generate Two-factor Backup Codes"
  >
    <Form
      onSubmit={[Function]}
    >
      <Panel.LEGACY.Section>
        <Stack>
          <p>
            Keep these single-use backup codes somewhere safe but accessible. They can be used if your authentication app is unavailable (
            <span
              aria-label="phone in toilet emojis"
              role="img"
            >
              ðŸ“±Â âž¡ï¸ŽÂ ðŸš½
            </span>
             
            , etc).
          </p>
          <Grid>
            <Grid.Column
              md={6}
              xs={12}
            >
              <BackupCodes
                codes={
                  Array [
                    1,
                    2,
                    3,
                    4,
                  ]
                }
              />
            </Grid.Column>
          </Grid>
        </Stack>
      </Panel.LEGACY.Section>
      <Panel.LEGACY.Section>
        <Button
          onClick={[MockFunction]}
          variant="primary"
        >
          Close
        </Button>
      </Panel.LEGACY.Section>
    </Form>
  </Panel.LEGACY>
</Modal.LEGACY>
`;

exports[`Component: BackupCodesModal should show password error when exists 1`] = `
<Modal.LEGACY
  open={true}
>
  <Panel.LEGACY
    title="Generate Two-factor Backup Codes"
  >
    <Form
      onSubmit={[Function]}
    >
      <Panel.LEGACY.Section>
        <Stack>
          <Banner
            marginBottom="500"
            status="warning"
          >
            Clicking Generate will overwrite your existing 
            10
             active backup codes.
          </Banner>
          <p>
            Keep these single-use backup codes somewhere safe but accessible. They can be used if your authentication app is unavailable (
            <span
              aria-label="phone in toilet emojis"
              role="img"
            >
              ðŸ“±Â âž¡ï¸ŽÂ ðŸš½
            </span>
             
            , etc).
          </p>
          <Grid>
            <Grid.Column
              md={6}
              xs={12}
            >
              <TextField
                error="Incorrect Password"
                id="tfa-backup-codes-generate-password"
                onChange={[MockFunction]}
                placeholder="Password"
                required={true}
                type="password"
                value=""
              />
            </Grid.Column>
          </Grid>
        </Stack>
      </Panel.LEGACY.Section>
      <Panel.LEGACY.Section>
        <ButtonWrapper>
          <Button
            disabled={false}
            onClick={[MockFunction]}
            type="submit"
            variant="primary"
          >
            Generate
          </Button>
          <Button
            onClick={[MockFunction]}
            variant="secondary"
          >
            Cancel
          </Button>
        </ButtonWrapper>
      </Panel.LEGACY.Section>
    </Form>
  </Panel.LEGACY>
</Modal.LEGACY>
`;
